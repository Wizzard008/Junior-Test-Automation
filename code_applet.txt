
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import javax.swing.event.*;
//Panel with static text
class SimpleTextPanel extends JPanel{
	SimpleTextPanel(String text){
		super();
		JLabel lbl=new JLabel(text,JLabel.CENTER);
		lbl.setFont(new Font("Monospaced",Font.BOLD+Font.ITALIC,15));
		// add label to created panel
		add(lbl);		
	}
}
//Panel with edited text
class MainTextPanel extends JPanel{
	private JLabel MainText;
	public void setMainText(String text){
		MainText.setText(text);
	}
	public void setMainFont(Font fnt){
		MainText.setFont(fnt);
	}
	MainTextPanel(String text, Font fnt){
		super();
		setBorder(BorderFactory.createEtchedBorder());
		MainText=new JLabel(text, JLabel.CENTER);
		MainText.setFont(fnt);
		add(MainText);
	}
}
//Sub-Panels Classes
//1. Panel with font Selector
class FontTypePanel extends JPanel{
	private JComboBox FontTypeList;
	public String getFontType(){
		return (String)FontTypeList.getSelectedItem();		
	}
	FontTypePanel(ActionListener hnd){
		super();
		setBorder(BorderFactory.createEtchedBorder());
		setLayout(new GridLayout(5,1,2,2));
		add(new JLabel("Select Font Type:"));
		String[] fonts={"Dialog","DialogInput","Monospaced","Serif","SansSerif"};
		FontTypeList=new JComboBox(fonts);
		FontTypeList.addActionListener(hnd);
		add(FontTypeList);
	} 
}
//2.Panel with font type Selector
class FontStylePanel extends JPanel{
	private JRadioButton normal,italic,bold,it_bold;
	public int getFontStyle(){
		if(normal.isSelected()) return Font.PLAIN;
		if(italic.isSelected()) return Font.ITALIC;
		if(bold.isSelected()) return Font.BOLD;
		else return Font.ITALIC+Font.BOLD;
	}	
	FontStylePanel(ActionListener hnd){
		super();		
		setBorder(BorderFactory.createEtchedBorder());
		setLayout(new GridLayout(5,1,2,2));
		add(new JLabel("Select Font Style:"));
		ButtonGroup rbg=new ButtonGroup();
		normal=new JRadioButton("Normal",true);
		normal.addActionListener(hnd);
		rbg.add(normal);
		add(normal);
		italic=new JRadioButton("Italic",false);
		italic.addActionListener(hnd);
		rbg.add(italic);
		add(italic);
		bold=new JRadioButton("Bold",false);
		bold.addActionListener(hnd);
		rbg.add(bold);
		add(bold);
		it_bold=new JRadioButton("BoldItalic",false);
		it_bold.addActionListener(hnd);
		rbg.add(it_bold);
		add(it_bold);		
	} 
}
//Sub-class Font size
class FontSizePanel extends JPanel{
	private JSpinner FontSize;
	public int getFontSize(){
		return (Integer)FontSize.getValue();
	}
	FontSizePanel(ChangeListener hnd){
		super();
		setBorder(BorderFactory.createEtchedBorder());
		setLayout(new GridLayout(5,1,2,2));
		add(new JLabel("Please Select Font Size:"));
		SpinnerNumberModel snm=new SpinnerNumberModel(20,14,26,2);
		FontSize =new JSpinner(snm);
		FontSize.addChangeListener(hnd);
		add(FontSize);
	}
}
//First TAB panel
class FontPanel extends JPanel{
	private FontTypePanel FTP;
	private	FontStylePanel FSP;
	private FontSizePanel FZP;
	public Font newFont(){
		return new Font(FTP.getFontType(),FSP.getFontStyle(),FZP.getFontSize());
	}
	FontPanel(ActionListener hnd1, ChangeListener hnd2){
		super();
		setLayout(new GridLayout(1,3,2,2));
		FTP=new FontTypePanel(hnd1);
		FSP=new FontStylePanel(hnd1);
		FZP=new FontSizePanel(hnd2);
		add(FTP);
		add(FSP);
		add(FZP);
	}
}
//Second TAB panel
class TextPanel extends JPanel{
	public JTextField TF;
	public JCheckBox CB;
	public JButton BT;
	TextPanel(ActionListener hnd){
		super();
		setLayout(new GridLayout(4,1,2,2));
		setBorder(BorderFactory.createEtchedBorder());
		CB=new JCheckBox("Allow Change Text",false);
		CB.addActionListener(hnd);
		TF=new JTextField();
		TF.setEnabled(false);
		BT=new JButton("Confirm");
		BT.addActionListener(hnd);
		BT.setEnabled(false);
		add(TF);
		add(CB);
		add(BT);
	}	
}
//Top Tab Panel
class TPanel extends JTabbedPane{
	public TextPanel TP;
	public FontPanel FP;
	TPanel(ActionListener hnd1, ChangeListener hnd2, ActionListener hnd3){
		super();
		FP=new FontPanel(hnd1, hnd2);
		TP=new TextPanel(hnd3);
		addTab("Font Selection",FP);
		addTab("Font Enter",TP);
	}
}


public class SoBigApplet extends JApplet{
	private TPanel tpl;
	private SimpleTextPanel stp;
	private MainTextPanel mtp;
	public void init(){
		FontHandler fhnd=new FontHandler();
		TextHandler thnd=new TextHandler();
		setLayout(null);
		int w,h;
		w=getWidth();
		h=getHeight();
		tpl=new TPanel(fhnd,fhnd,thnd);
		tpl.setBounds(0,0,w,3*h/5);
		stp=new SimpleTextPanel("Text example:");
		stp.setBounds(0,3*h/5,w,h/5);
		mtp=new MainTextPanel("Text holder:",tpl.FP.newFont());
		mtp.setBounds(0,4*h/5,w,h/5);
		add(tpl);
		add(stp);
		add(mtp);		
	}
	class FontHandler implements ActionListener, ChangeListener{
		private void applyFont(){
			mtp.setMainFont(tpl.FP.newFont());			
		}
		public void actionPerformed(ActionEvent ae){
			applyFont();
		}
		public void stateChanged(ChangeEvent ce){
			applyFont();
		}
	}
	class TextHandler implements ActionListener{
		private void OffOn(boolean state){
			tpl.TP.CB.setSelected(state);
			tpl.TP.TF.setEnabled(state);
			tpl.TP.BT.setEnabled(state);
		}
		public void actionPerformed(ActionEvent ae){
			String ac=ae.getActionCommand();
			
			if(ac.equalsIgnoreCase(tpl.TP.BT.getText())){
				mtp.setMainText(tpl.TP.TF.getText());
				OffOn(false);
			}
			else OffOn(tpl.TP.CB.isSelected());			
		}
	}
}


